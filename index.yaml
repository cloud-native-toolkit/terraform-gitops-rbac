id: github.com/cloud-native-toolkit/terraform-gitops-rbac
name: gitops-rbac
type: terraform
description: Module to configure the provisioning of rbac in a namespace in a GitOps repo
tags:
  - tools
  - gitops
versions:
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
        default: ""
        optional: true
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
      - name: cluster_scope
        type: bool
        description: Flag indicating that cluster scope RBAC should be created (ClusterRole and ClusterRoleBinding)
        default: false
        optional: true
    version: v1.6.2
    outputs:
      - name: service_account_name
        description: output "service_account_name" {   value = var.service_account_name   depends_on = [null_resource.setup_gitops] }
      - name: service_account_namespace
        description: output "service_account_namespace" {   value = var.service_account_namespace   depends_on = [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
        default: ""
        optional: true
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
      - name: cluster_scope
        type: bool
        description: Flag indicating that cluster scope RBAC should be created (ClusterRole and ClusterRoleBinding)
        default: false
        optional: true
    version: v1.6.1
    outputs:
      - name: service_account_name
        description: output "service_account_name" {   value = var.service_account_name   depends_on = [null_resource.setup_gitops] }
      - name: service_account_namespace
        description: output "service_account_namespace" {   value = var.service_account_namespace   depends_on = [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
        default: ""
        optional: true
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
      - name: cluster_scope
        type: bool
        description: Flag indicating that cluster scope RBAC should be created (ClusterRole and ClusterRoleBinding)
        default: false
        optional: true
    version: v1.6.0
    outputs:
      - name: service_account_name
        description: output "service_account_name" {   value = var.service_account_name   depends_on = [null_resource.setup_gitops] }
      - name: service_account_namespace
        description: output "service_account_namespace" {   value = var.service_account_namespace   depends_on = [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
        default: ""
        optional: true
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
      - name: cluster_scope
        type: bool
        description: Flag indicating that cluster scope RBAC should be created (ClusterRole and ClusterRoleBinding)
        default: false
        optional: true
      - name: serverName
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
    version: v1.5.1
    outputs:
      - name: service_account_name
        description: output "service_account_name" {   value = var.service_account_name   depends_on = [null_resource.setup_gitops] }
      - name: service_account_namespace
        description: output "service_account_namespace" {   value = var.service_account_namespace   depends_on = [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
        default: ""
        optional: true
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
      - name: cluster_scope
        type: bool
        description: Flag indicating that cluster scope RBAC should be created (ClusterRole and ClusterRoleBinding)
        default: false
        optional: true
      - name: serverName
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
    version: v1.5.0
    outputs:
      - name: service_account_name
        description: output "service_account_name" {   value = var.service_account_name   depends_on = [null_resource.setup_gitops] }
      - name: service_account_namespace
        description: output "service_account_namespace" {   value = var.service_account_namespace   depends_on = [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
        default: ""
        optional: true
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
      - name: cluster_scope
        type: bool
        description: Flag indicating that cluster scope RBAC should be created (ClusterRole and ClusterRoleBinding)
        default: false
        optional: true
    version: v1.4.0
    outputs:
      - name: service_account_name
        description: output "service_account_name" {   value = var.service_account_name   depends_on = [null_resource.setup_gitops] }
      - name: service_account_namespace
        description: output "service_account_namespace" {   value = var.service_account_namespace   depends_on = [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: config_repo
        moduleRef:
          id: gitops
          output: config_repo
        type: string
        description: The repo that contains the argocd configuration
      - name: config_token
        moduleRef:
          id: gitops
          output: config_token
        type: string
        description: The token for the config repo
      - name: config_paths
        moduleRef:
          id: gitops
          output: config_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the config repo
      - name: config_projects
        moduleRef:
          id: gitops
          output: config_projects
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The ArgoCD projects in the config repo
      - name: application_repo
        moduleRef:
          id: gitops
          output: application_repo
        type: string
        description: The repo that contains the application configuration
      - name: application_token
        moduleRef:
          id: gitops
          output: application_token
        type: string
        description: The token for the application repo
      - name: application_paths
        moduleRef:
          id: gitops
          output: application_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the application repo
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
        default: ""
        optional: true
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
      - name: cluster_scope
        type: bool
        description: Flag indicating that cluster scope RBAC should be created (ClusterRole and ClusterRoleBinding)
        default: false
        optional: true
    version: v1.3.0
    outputs:
      - name: service_account_name
        description: output "service_account_name" {   value = var.service_account_name   depends_on = [null_resource.setup_argocd, null_resource.setup_rbac] }
      - name: service_account_namespace
        description: output "service_account_namespace" {   value = var.service_account_namespace   depends_on = [null_resource.setup_argocd, null_resource.setup_rbac] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: config_repo
        moduleRef:
          id: gitops
          output: config_repo
        type: string
        description: The repo that contains the argocd configuration
      - name: config_token
        moduleRef:
          id: gitops
          output: config_token
        type: string
        description: The token for the config repo
      - name: config_paths
        moduleRef:
          id: gitops
          output: config_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the config repo
      - name: config_projects
        moduleRef:
          id: gitops
          output: config_projects
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The ArgoCD projects in the config repo
      - name: application_repo
        moduleRef:
          id: gitops
          output: application_repo
        type: string
        description: The repo that contains the application configuration
      - name: application_token
        moduleRef:
          id: gitops
          output: application_token
        type: string
        description: The token for the application repo
      - name: application_paths
        moduleRef:
          id: gitops
          output: application_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the application repo
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
        default: ""
        optional: true
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
      - name: cluster_scope
        type: bool
        description: Flag indicating that cluster scope RBAC should be created (ClusterRole and ClusterRoleBinding)
        default: false
        optional: true
    version: v1.2.0
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: config_repo
        moduleRef:
          id: gitops
          output: config_repo
        type: string
        description: The repo that contains the argocd configuration
      - name: config_token
        moduleRef:
          id: gitops
          output: config_token
        type: string
        description: The token for the config repo
      - name: config_paths
        moduleRef:
          id: gitops
          output: config_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the config repo
      - name: config_projects
        moduleRef:
          id: gitops
          output: config_projects
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The ArgoCD projects in the config repo
      - name: application_repo
        moduleRef:
          id: gitops
          output: application_repo
        type: string
        description: The repo that contains the application configuration
      - name: application_token
        moduleRef:
          id: gitops
          output: application_token
        type: string
        description: The token for the application repo
      - name: application_paths
        moduleRef:
          id: gitops
          output: application_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the application repo
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
    version: v1.1.1
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: config_repo
        moduleRef:
          id: gitops
          output: config_repo
        type: string
        description: The repo that contains the argocd configuration
      - name: config_token
        moduleRef:
          id: gitops
          output: config_token
        type: string
        description: The token for the config repo
      - name: config_paths
        moduleRef:
          id: gitops
          output: config_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the config repo
      - name: config_projects
        moduleRef:
          id: gitops
          output: config_projects
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The ArgoCD projects in the config repo
      - name: application_repo
        moduleRef:
          id: gitops
          output: application_repo
        type: string
        description: The repo that contains the application configuration
      - name: application_token
        moduleRef:
          id: gitops
          output: application_token
        type: string
        description: The token for the application repo
      - name: application_paths
        moduleRef:
          id: gitops
          output: application_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the application repo
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
    version: v1.1.0
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: argocd
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
            version: ">= 1.0.0"
        optional: true
    variables:
      - name: config_repo
        moduleRef:
          id: gitops
          output: config_repo
        type: string
        description: The repo that contains the argocd configuration
      - name: config_token
        moduleRef:
          id: gitops
          output: config_token
        type: string
        description: The token for the config repo
      - name: config_paths
        moduleRef:
          id: gitops
          output: config_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the config repo
      - name: config_projects
        moduleRef:
          id: gitops
          output: config_projects
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The ArgoCD projects in the config repo
      - name: application_repo
        moduleRef:
          id: gitops
          output: application_repo
        type: string
        description: The repo that contains the application configuration
      - name: application_token
        moduleRef:
          id: gitops
          output: application_token
        type: string
        description: The token for the application repo
      - name: application_paths
        moduleRef:
          id: gitops
          output: application_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the application repo
      - name: service_account_namespace
        moduleRef:
          id: argocd
          output: argocd_namespace
        type: string
        description: The namespace where the service account can be found
      - name: service_account_name
        moduleRef:
          id: argocd
          output: argocd_service_account
        type: string
        description: The name of the service account that will be bound to the role
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the role should be provisioned
      - name: label
        type: string
        description: The label used in the role and role-binding names
        default: ""
        optional: true
      - name: rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: The rules that should be created in the role
    version: v1.0.0
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies: []
    #    - id: cluster
    #      refs:
    #        - source: github.com/ibm-garage-cloud/terraform-ibm-container-platform
    #          version: ">= 1.7.0"
    #        - source: github.com/ibm-garage-cloud/terraform-k8s-ocp-cluster
    #          version: ">= 2.0.0"
    #    - id: namespace
    #      refs:
    #        - source: github.com/ibm-garage-cloud/terraform-k8s-namespace
    #          version: ">= 2.1.0"
    #    - id: dashboard
    #      refs:
    #        - source: github.com/ibm-garage-cloud/terraform-k8s-dashboard
    #          version: ">= 1.6.0"
    variables: []
    version: v0.0.0
